var search_data = {"index":{"searchIndex":["payme","config","errors","invalidfieldsnumber","missingpath","params","request","requestbinary","response","responsebinary","config_path()","default()","default()","exec()","exec()","fields()","included()","included()","included()","launch()","launch()","new()","new()","parse_params()","parse_result()","set_config()","valid_params()","license","readme.md","payme.rb","config.rb","errors.rb","request.rb","binary.rb","params.rb","response.rb","binary.rb"],"longSearchIndex":["lib/payme/errors.rb","payme","payme","payme::errors","payme::errors","payme","payme","payme","payme","payme","payme::config","payme::config","payme::config","payme::requestbinary","payme::responsebinary","payme::responsebinary","payme::params","payme::requestbinary","payme::responsebinary","payme::requestbinary","payme::responsebinary","payme::request","payme::response","payme::params","payme::responsebinary","payme::config","payme::params","files/license.html","files/readme_md.html","files/lib/payme_rb.html","files/lib/payme/config_rb.html","files/lib/payme/errors_rb.html","files/lib/payme/request_rb.html","files/lib/payme/request/binary_rb.html","files/lib/payme/request/params_rb.html","files/lib/payme/response_rb.html","files/lib/payme/response/binary_rb.html"],"info":[["Payme","lib/payme/response.rb","classes/Payme.html"," < ","encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding:",1],["Config","Payme","classes/Payme/Config.html"," < Object","",1],["Errors","Payme","classes/Payme/Errors.html"," < ","",1],["InvalidFieldsNumber","Payme::Errors","classes/Payme/Errors/InvalidFieldsNumber.html"," < RuntimeError","",1],["MissingPath","Payme::Errors","classes/Payme/Errors/MissingPath.html"," < RuntimeError","",1],["Params","Payme","classes/Payme/Params.html"," < ","",1],["Request","Payme","classes/Payme/Request.html"," < Object","",1],["RequestBinary","Payme","classes/Payme/RequestBinary.html"," < ","",1],["Response","Payme","classes/Payme/Response.html"," < Object","",1],["ResponseBinary","Payme","classes/Payme/ResponseBinary.html"," < ","",1],["config_path","Payme::Config","classes/Payme/Config.html#M000011","()","",2],["default","Payme::Config","classes/Payme/Config.html#M000008","()","",2],["default","Payme::Config","classes/Payme/Config.html#M000009","()","",2],["exec","Payme::RequestBinary","classes/Payme/RequestBinary.html#M000017","()","Executes the binary call ",2],["exec","Payme::ResponseBinary","classes/Payme/ResponseBinary.html#M000005","()","Executes the binary call ",2],["fields","Payme::ResponseBinary","classes/Payme/ResponseBinary.html#M000007","()","",2],["included","Payme::Params","classes/Payme/Params.html#M000018","(klass)","",2],["included","Payme::RequestBinary","classes/Payme/RequestBinary.html#M000015","(klass)","",2],["included","Payme::ResponseBinary","classes/Payme/ResponseBinary.html#M000003","(klass)","",2],["launch","Payme::RequestBinary","classes/Payme/RequestBinary.html#M000016","()","Executes the binary call, gets the datas Validates that the the code is correct And returns the form",2],["launch","Payme::ResponseBinary","classes/Payme/ResponseBinary.html#M000004","()","Executes the binary call, gets the datas Validates that the the code is correct And returns the form",2],["new","Payme::Request","classes/Payme/Request.html#M000001","(amount, options = {})","",2],["new","Payme::Response","classes/Payme/Response.html#M000000","(message, options = {})","",2],["parse_params","Payme::Params","classes/Payme/Params.html#M000019","()","Parse the provided parameters before to make a binary call ",2],["parse_result","Payme::ResponseBinary","classes/Payme/ResponseBinary.html#M000006","(result)","",2],["set_config","Payme::Config","classes/Payme/Config.html#M000010","(file_path, env)","",2],["valid_params","Payme::Params","classes/Payme/Params.html#M000020","()","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Payme: Sogenactif API Ruby adapter  Copyright (c) 2010 LIM SAS  Permission is hereby granted, free of",3],["README.md","files/README_md.html","files/README_md.html","","# Payme  A ruby library to easily do and process online payments using the Atos Worldline API.  Requirements",3],["payme.rb","files/lib/payme_rb.html","files/lib/payme_rb.html","","encoding: UTF-8 ",3],["config.rb","files/lib/payme/config_rb.html","files/lib/payme/config_rb.html","","encoding: UTF-8 ",3],["errors.rb","files/lib/payme/errors_rb.html","files/lib/payme/errors_rb.html","","encoding: UTF-8 ",3],["request.rb","files/lib/payme/request_rb.html","files/lib/payme/request_rb.html","","encoding: UTF-8 ",3],["binary.rb","files/lib/payme/request/binary_rb.html","files/lib/payme/request/binary_rb.html","","encoding: UTF-8 ",3],["params.rb","files/lib/payme/request/params_rb.html","files/lib/payme/request/params_rb.html","","encoding: UTF-8 ",3],["response.rb","files/lib/payme/response_rb.html","files/lib/payme/response_rb.html","","encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding:",3],["binary.rb","files/lib/payme/response/binary_rb.html","files/lib/payme/response/binary_rb.html","","encoding: UTF-8 ",3]]}}